<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta property="article:published_time" content="{{ gallery.last_updated }}">
    <title>{{ gallery.title }} - {{ site_name }}</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="/css/site.css" rel="stylesheet">
</head>

<body class="bg-gray-100">
    <header class="bg-white shadow-md">
        <div class="container mx-auto px-4 py-6">
            <h1 class="text-3xl font-bold text-gray-800">
                <a href="/">{{ site_name }}</a>
            </h1>
            <p class="text-gray-600">by {{ author }}</p>
        </div>
    </header>

    <main id="top" class="container mx-auto px-4 py-8">
        <nav class="mb-4">
            <a href="/" class="text-blue-500 hover:underline">&larr; Back to Home</a>
        </nav>

        <section class="mb-12 bg-white rounded-lg shadow-md overflow-hidden">
            <div class="md:flex justify-center items-center p-8">
                <div class="w-full max-w-md">
                    <h2 class="text-2xl font-bold mb-4 text-center">{{ gallery.title }}</h2>
                    <p class="mb-4 text-center">Enter the password for this gallery to continue.</p>
                    <form id="loginForm" class="space-y-4">
                        <div>
                            <input type="password" id="password" name="password" required class="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md text-lg shadow-lg placeholder-gray-400 focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500">
                        </div>
                        <div>
                            <button type="submit" id="submitButton" disabled class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed">
                                Submit
                            </button>
                        </div>
                    </form>
                    <p id="errorMessage" class="mt-4 text-red-600 text-center hidden"></p>
                </div>
            </div>
        </section>
    </main>

    <footer class="bg-white shadow-md mt-12">
        <div class="container mx-auto px-4 py-6 text-center text-gray-600">
            &copy; {{ current_year }} {{ author }}. All rights reserved.
        </div>
    </footer>

    <script>
        async function hashString(input) {
            const encoder = new TextEncoder();
            const data = encoder.encode(input);
            const hashBuffer = await crypto.subtle.digest('SHA-256', data);
            const hashArray = Array.from(new Uint8Array(hashBuffer));
            const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
            return hashHex;
        }

        async function hashPassword(galleryId, password) {
            const hashHex = await hashString(`${galleryId}:${password}`);
            return hashHex.slice(0, 16); // Truncate to 16 characters
        }

        const form = document.getElementById('loginForm');
        const passwordInput = document.getElementById('password');
        const submitButton = document.getElementById('submitButton');
        const errorMessage = document.getElementById('errorMessage');

        passwordInput.addEventListener('input', () => {
            submitButton.disabled = passwordInput.value.length === 0;
        });

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const password = passwordInput.value;
            const galleryId = '{{ gallery.id }}';
            const privateGalleryIdHash = '{{ gallery.private_gallery_id_hash }}';

            try {
                const assertedPrivateGalleryId = await hashPassword(galleryId, password);
                const assertedPrivateGalleryIdHash = await hashString(assertedPrivateGalleryId);

                if (assertedPrivateGalleryIdHash === privateGalleryIdHash) {
                    window.location.href = `./${assertedPrivateGalleryId}.html`;
                } else {
                    errorMessage.textContent = 'Incorrect password. Please try again.';
                    errorMessage.classList.remove('hidden');
                }
            } catch (error) {
                console.error('Hashing error:', error);
                errorMessage.textContent = 'An error occurred. Please try again.';
                errorMessage.classList.remove('hidden');
            }
        });
    </script>
</body>

</html>